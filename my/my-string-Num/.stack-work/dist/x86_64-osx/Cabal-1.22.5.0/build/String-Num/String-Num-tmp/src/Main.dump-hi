
==================== FINAL INTERFACE ====================
2016-02-01 06:05:10.054838 UTC

interface main@main:Main [orphan module] 7103
  interface hash: 3b189416ce27365494af15c942ec4ea3
  ABI hash: ff05257bd46391d6561b4307aa4527c5
  export-list hash: 4adb00faa5b99d656b0544575dc125ba
  orphan hash: b6355a3abdcf54a568118b4bf9a425a2
  flag hash: f79dcfc19ea434ff21d284a745edb384
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0899686bfc1d9ef72dff3de85e99862a
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
5d0b165369ef1947b2f4ea1c925c9615
  $fNum[] :: GHC.Num.Num GHC.Base.String
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Base.String
                  (GHC.Base.++ @ GHC.Types.Char)
                  (GHC.Base.++ @ GHC.Types.Char)
                  (GHC.Base.++ @ GHC.Types.Char)
                  Main.$fNum[]_$cnegate
                  Main.$fNum[]_$csignum
                  Main.$fNum[]_$csignum
                  Main.$fNum[]_$cfromInteger -}
d78dc5453e558bb38cbe75084378ef8c
  $fNum[]_$cfromInteger ::
    GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 1, Strictness: <S,U>m2,
     Unfolding: InlineRule (0, True, True)
                GHC.Show.$fShowInteger_$cshow -}
205d7438bf4ff1bf103965c487f3244a
  $fNum[]_$cnegate :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ a :: GHC.Base.String ->
                 GHC.CString.unpackAppendCString# "-"# a) -}
08e8b10887b7f39d32139ce2b80696bc
  $fNum[]_$csignum :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ a :: GHC.Base.String -> a) -}
3604e818236c255da7e856b6dbf40f52
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
1aa9fbff2cbdee8578a54acb7775a2b7
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main3
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.CString.unpackAppendCString#
                      "Congratulations, "#
                      (GHC.Base.++ @ GHC.Types.Char ipv3 Main.main2))
                   GHC.Types.True
                   ipv2 } }) -}
66f4017537d91afaee754676ea87b4a2
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " has now mastered class Num!"#) -}
e428e6c16e93d2da81ca12c49b809f99
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "May I have your name?"#) -}
79ba3a80a8959689e70d79a55bdc9691
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
instance GHC.Num.Num [[]] = Main.$fNum[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

